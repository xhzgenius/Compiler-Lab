global @x = alloc i32, zeroinit

decl @getint(): i32

decl @getch(): i32

decl @getarray(*i32): i32

decl @putint(i32)

decl @putch(i32)

decl @putarray(i32, *i32)

decl @starttime()

decl @stoptime()

fun @half(%x0_param: i32, %x1_param: i32, %x2_param: i32, %x3_param: i32, %x4_param: i32, %x5_param: i32, %x6_param: i32, %x7_param: i32, %x8_param: i32, %x9_param: i32, %x10_param: i32): i32 {
%0:
  @x0 = alloc i32
  store %x0_param, @x0
  @x1 = alloc i32
  store %x1_param, @x1
  @x2 = alloc i32
  store %x2_param, @x2
  @x3 = alloc i32
  store %x3_param, @x3
  @x4 = alloc i32
  store %x4_param, @x4
  @x5 = alloc i32
  store %x5_param, @x5
  @x6 = alloc i32
  store %x6_param, @x6
  @x7 = alloc i32
  store %x7_param, @x7
  @x8 = alloc i32
  store %x8_param, @x8
  @x9 = alloc i32
  store %x9_param, @x9
  @x10 = alloc i32
  store %x10_param, @x10
  %1 = load @x10
  %2 = div %1, 2
  ret %2
}

fun @f(): i32 {
%3:
  %4 = load @x
  %5 = div %4, 2
  ret %5
}

fun @main(): i32 {
%6:
  @tmp1 = alloc i32
  store -1, @tmp1
  @tmp2 = alloc i32
  store -2, @tmp2
  @tmp3 = alloc i32
  store -3, @tmp3
  @tmp4 = alloc i32
  store -4, @tmp4
  @tmp5 = alloc i32
  store -5, @tmp5
  @tmp6 = alloc i32
  store -6, @tmp6
  @tmp7 = alloc i32
  store -7, @tmp7
  @tmp8 = alloc i32
  store -8, @tmp8
  @tmp9 = alloc i32
  store -9, @tmp9
  @tmp10 = alloc i32
  store -10, @tmp10
  @a0 = alloc i32
  %7 = load @tmp10
  %8 = call @half(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, %7)
  store %8, @a0
  @tmp11 = alloc i32
  %9 = load @tmp10
  %10 = add %9, 1
  store %10, @tmp11
  %11 = load @a0
  ret %11
}
