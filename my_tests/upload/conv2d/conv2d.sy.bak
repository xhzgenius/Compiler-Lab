int filter[100][100] = {};
int array[100][100] = {};
int result[200][200] = {};
void Conv2(int filterW, int filterH, int arrW, int arrH, int filter[][100], int arr[][100])
{
    int temp;
    int i = 0;
    int j = 0;
    int m = 0;
    int n = 0;
    while (i < filterH + arrH - 1)
    {
        j = 0;
        while (j < filterW + arrW - 1)
        {
            temp = 0;
            m = 0;
            while (m < filterH)
            {
                n = 0;
                while (n < filterW)
                {
                    if ((i - m) >= 0 && (i - m) < arrH && (j - n) >= 0 && (j - n) < arrW)
                    {
                        temp = temp + filter[m][n] * arr[i - m][j - n];
                    }
                    n = n + 1;
                }
                m = m + 1;
            }
            result[i][j] = temp;
            j = j + 1;
        }
        i = i + 1;
    }
}

int main()
{
    int filterW;
    int filterH;
    int arrW;
    int arrH;
    int resW;
    int resH;
    int i = 0;
    int j = 0;
    filterW = getint();
    filterH = getint();
    while (i < filterH)
    {
        j = 0;
        while (j < filterW)
        {
            filter[i][j] = getint();
            j = j + 1;
        }
        i = i + 1;
    }
    arrW = getint();
    arrH = getint();
    while (i < arrH)
    {
        j = 0;
        while (j < arrW)
        {
            array[i][j] = getint();
            j = j + 1;
        }
        i = i + 1;
    }
    Conv2(filterW, filterH, arrW, arrH, filter, array);

    resH = filterH + arrH - 1;
    resW = filterW + arrW - 1;
    while (i < resH)
    {
        j = 0;
        while (j < resW)
        {
            putint(result[i][j]);
            putch(32);
            j = j + 1;
        }
        putch(10);
        i = i + 1;
    }
    return 0;
}
